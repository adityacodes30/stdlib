/**
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// FUNCTIONS //

/**
* Tests whether an object has a specified method.
*
* @private
* @param {Object} obj - input object
* @param {string} method - method name
* @returns {boolean} boolean indicating whether an object has a specified method
*
* @example
* var bool = hasMethod( [], 'join' );
* // returns true
*
* @example
* var bool = hasMethod( [], 'beep' );
* // returns false
*/
function hasMethod( obj, method ) {
	return ( typeof obj[ method ] === 'function' );
}


// MAIN //

/**
* Returns a string which is the concatenation of all the elements in an array with a given separator.
*
* @param {Collection} x - input array
* @param {integer} separator - separator to be used in string
* @returns {string} output string
*
* @example
* var x = [ 1, 2, 3, 4 ];
*
* var out = join( x, ',' );
* // returns '1,2,3,4'
*
* @example
* var x = [ 1, 2, 3, null, undefined,  4 ];
*
* var out = join( x, '-' );
* // returns '1-2-3---4'
*/
function join( x, separator ) {
	var s;
	var i;
	s='';
	if ( hasMethod( x, 'join' ) ) {
		return x.join( separator );
	}
	for ( i = 0; i < x.length; i++ ) {
		if ( i < x.length - 1 ) {
			s += separator;
		}
		if ( typeof x[ i ] === 'undefined' || x[ i ] === null ) {
			continue;
		}
		s += x[ i ];
	}
	return s;
}


// EXPORTS //

module.exports = join;
